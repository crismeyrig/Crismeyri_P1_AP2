@page "/CProductos"

@using BLL
@using Models
@inject IToastService Toast
@inject NavigationManager Nav
@inject IJSRuntime Confirmacion

<div class="card">
    <div class="card-header">
        <div class="form-row mb-3 mt-3">
            <div class="col-sm-4">
                <h3>Consulta de Productos</h3>
            </div>

          
            <div class="col-sm-3">
                <select @bind="Index" class="custom-select">
                    <option value="-1" disabled>Filtrar por...</option>
                    <option value="0">Todos</option>
                    <option value="1">Producto Id</option>
                    <option value="2">Descripción</option>
                </select>
            </div>

            @*Criterio*@
            <div class="col-sm-3">
                <input class="form-control w-100" type="@(Index == 1 ? "number" : "text")" @bind="Criterio" placeholder="Ingrese el criterio a filtrar" />
            </div>

            @*Filtrar*@
            <div class="col-sm-2">
                <button class="btn btn-primary" @onclick="FiltrarProductos"><i class="oi oi-magnifying-glass" /> Filtrar</button>
            </div>
        </div>
    </div>


    <div class="card-body">
        @*para validar*@
        @if (Productos == null || Filtro == null)
        {
            <div>
                <h4>Cargando...</h4>
            </div>
        }
        else
        {
            
            <table class="table table-hover">
                <thead class="thead-light">
                    <tr>
                        <th>Producto Id</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Existencia</th>
                        <th>Valor de Inventario</th>
                        <th></th>
                    </tr>
                </thead>

                @*tabla *@
                <tbody>
                    @foreach (var producto in Filtro)
                    {
                        <tr>
                            <td>@producto.ProductoId</td>
                            <td>@producto.Descripcion</td>
                            <td>@string.Format("{0:c}", producto.Costo)</td>
                            <td>@producto.Existencia</td>
                            <td>@string.Format("{0:c}", producto.ValorInventario)</td>

                            <td>
                                <button @onclick="() => Editar(producto.ProductoId)" class="btn btn-primary oi oi-pencil"></button>
                                <button @onclick="() => Eliminar(producto.ProductoId)" class="btn btn-danger oi oi-trash"></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>


@code {
    int Index = -1;
    string Criterio;

    public List<Productos> Productos { get; set; }
    public List<Productos> Filtro { get; set; }

    protected override void OnInitialized()
    {
        Actualizar();
    }

    
    void Actualizar()
    {
        Productos = ProductosBLL.GetList(p => true).ToList();
        Filtro = Productos;
    }

   
    void Editar(int id)
    {
        Nav.NavigateTo($"RProductos/{id}");
    }

 
    async Task Eliminar(int id)
    {
        Nav.ToAbsoluteUri($"RProductos/{id}");

        bool confirmed = await Confirmacion.InvokeAsync<bool>("confirm", "Estas seguro de que deseas eliminar este Producto?");
        if (confirmed)
        {
            bool eliminado;
            eliminado = ProductosBLL.Eliminar(id);

            if (eliminado)
            {
                Actualizar();
                Toast.ShowSuccess("Registro Eliminado exitosamente.");
            }
            else
                Toast.ShowError("No fue posible Eliminar este Registro.");
            return;
        }
        return;
    }

    @*Para filtrar los productos*@
    void FiltrarProductos()
    {
        
        if (Index == 0)
        {
            Filtro = ProductosBLL.GetList(p => true).ToList();
        }

    
        else if (Index == 1)
        {
            if (int.TryParse(Criterio, out int ProductoId))
            {
                Filtro = ProductosBLL.GetList(p => p.ProductoId == ProductoId).ToList();
            }
        }

        else if (Index == 2)
        {
            Filtro = ProductosBLL.GetList(p => p.Descripcion.ToLower().Contains(Criterio.ToLower())).ToList();
        }
    }
}